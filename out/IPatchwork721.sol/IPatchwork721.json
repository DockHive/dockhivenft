{"abi":[{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"frozen","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getFreezeNonce","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"nonce","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getScopeName","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"imageURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"loadPackedMetadata","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"loadPackedMetadataSlot","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"slot","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"locked","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"schema","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IPatchworkMetadata.MetadataSchema","components":[{"name":"version","type":"uint256","internalType":"uint256"},{"name":"entries","type":"tuple[]","internalType":"struct IPatchworkMetadata.MetadataSchemaEntry[]","components":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"permissionId","type":"uint256","internalType":"uint256"},{"name":"fieldType","type":"uint8","internalType":"enum IPatchworkMetadata.FieldType"},{"name":"fieldCount","type":"uint256","internalType":"uint256"},{"name":"visibility","type":"uint8","internalType":"enum IPatchworkMetadata.FieldVisibility"},{"name":"slot","type":"uint256","internalType":"uint256"},{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}]}]}],"stateMutability":"view"},{"type":"function","name":"schemaURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFrozen","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"frozen","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setLocked","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"locked","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPermissions","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"permissions","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"storePackedMetadata","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"storePackedMetadataSlot","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"slot","type":"uint256","internalType":"uint256"},{"name":"data","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Frozen","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Locked","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PermissionChange","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"permissions","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SchemaChange","inputs":[{"name":"addr","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Thawed","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unlocked","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","frozen(uint256)":"e9ac0440","getApproved(uint256)":"081812fc","getFreezeNonce(uint256)":"76b90b94","getScopeName()":"f44c3bf7","imageURI(uint256)":"8f742d16","isApprovedForAll(address,address)":"e985e9c5","loadPackedMetadata(uint256)":"4decc687","loadPackedMetadataSlot(uint256,uint256)":"5cf5944d","locked(uint256)":"b45a3c0e","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","schema()":"f8895cc8","schemaURI()":"58e23bac","setApprovalForAll(address,bool)":"a22cb465","setFrozen(uint256,bool)":"6b88ddaf","setLocked(uint256,bool)":"0a3cc989","setPermissions(address,uint256)":"e19267ed","storePackedMetadata(uint256,uint256[])":"538cae22","storePackedMetadataSlot(uint256,uint256,uint256)":"99e39025","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Frozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"permissions\",\"type\":\"uint256\"}],\"name\":\"PermissionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SchemaChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Thawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFreezeNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScopeName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"imageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"loadPackedMetadata\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"loadPackedMetadataSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schema\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permissionId\",\"type\":\"uint256\"},{\"internalType\":\"enum IPatchworkMetadata.FieldType\",\"name\":\"fieldType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"fieldCount\",\"type\":\"uint256\"},{\"internalType\":\"enum IPatchworkMetadata.FieldVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"internalType\":\"struct IPatchworkMetadata.MetadataSchemaEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPatchworkMetadata.MetadataSchema\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"setFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"permissions\",\"type\":\"uint256\"}],\"name\":\"setPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"storePackedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"storePackedMetadataSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Runic Labs, Inc\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Frozen(uint256)\":{\"params\":{\"tokenId\":\"The identifier for a token.\"}},\"Locked(uint256)\":{\"details\":\"If a token is minted and the status is locked, this event should be emitted.\",\"params\":{\"tokenId\":\"The identifier for a token.\"}},\"PermissionChange(address,uint256)\":{\"params\":{\"permissions\":\"The permissions\",\"to\":\"The address the permissions are assigned to\"}},\"SchemaChange(address)\":{\"params\":{\"addr\":\"the address of the Patchwork721\"}},\"Thawed(uint256)\":{\"params\":{\"tokenId\":\"The identifier for a token.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unlocked(uint256)\":{\"details\":\"If a token is minted and the status is unlocked, this event should be emitted.\",\"params\":{\"tokenId\":\"The identifier for a token.\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"frozen(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"_0\":\"bool true if frozen, false if not\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getFreezeNonce(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"nonce\":\"the nonce\"}},\"getScopeName()\":{\"returns\":{\"_0\":\"string the name of the scope\"}},\"imageURI(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"_0\":\"string the image URI\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"loadPackedMetadata(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"_0\":\"uint256[] the raw slot data as a uint256 array\"}},\"loadPackedMetadataSlot(uint256,uint256)\":{\"params\":{\"slot\":\"Slot to load metadata from\",\"tokenId\":\"ID of the token\"},\"returns\":{\"_0\":\"uint256 the raw slot data as a uint256\"}},\"locked(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"schema()\":{\"returns\":{\"_0\":\"MetadataSchema the metadata schema\"}},\"schemaURI()\":{\"returns\":{\"_0\":\"string the URI of the schema\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"setFrozen(uint256,bool)\":{\"params\":{\"frozen\":\"Freeze status to set\",\"tokenId\":\"ID of the token\"}},\"setLocked(uint256,bool)\":{\"params\":{\"locked\":\"Lock status to set\",\"tokenId\":\"ID of the token\"}},\"setPermissions(address,uint256)\":{\"params\":{\"permissions\":\"Permissions value\",\"to\":\"Address to set permissions for\"}},\"storePackedMetadata(uint256,uint256[])\":{\"params\":{\"data\":\"Metadata to store\",\"tokenId\":\"ID of the token\"}},\"storePackedMetadataSlot(uint256,uint256,uint256)\":{\"params\":{\"data\":\"Metadata to store\",\"slot\":\"Slot to store metadata\",\"tokenId\":\"ID of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"Patchwork Protocol 721 Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Frozen(uint256)\":{\"notice\":\"Emitted when the freeze status is changed to frozen.\"},\"Locked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to locked.\"},\"PermissionChange(address,uint256)\":{\"notice\":\"Emitted when the permissions are changed\"},\"SchemaChange(address)\":{\"notice\":\"Emitted when the schema has changed\"},\"Thawed(uint256)\":{\"notice\":\"Emitted when the locking status is changed to not frozen.\"},\"Unlocked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to unlocked.\"}},\"kind\":\"user\",\"methods\":{\"frozen(uint256)\":{\"notice\":\"Gets the freeze status of a token (ERC-5192)\"},\"getFreezeNonce(uint256)\":{\"notice\":\"Returns the freeze nonce for a given token ID\"},\"getScopeName()\":{\"notice\":\"Get the scope this NFT claims to belong to\"},\"imageURI(uint256)\":{\"notice\":\"Returns the URI of the image associated with the given token ID\"},\"loadPackedMetadata(uint256)\":{\"notice\":\"Loads packed metadata for a given token ID\"},\"loadPackedMetadataSlot(uint256,uint256)\":{\"notice\":\"Loads packed metadata for a given token ID and slot\"},\"locked(uint256)\":{\"notice\":\"Returns the locking status of an Soulbound Token\"},\"schema()\":{\"notice\":\"Returns the metadata schema\"},\"schemaURI()\":{\"notice\":\"Returns the URI of the schema\"},\"setFrozen(uint256,bool)\":{\"notice\":\"Sets the freeze status of a token\"},\"setLocked(uint256,bool)\":{\"notice\":\"Sets the lock status of a token\"},\"setPermissions(address,uint256)\":{\"notice\":\"Sets permissions for a given address\"},\"storePackedMetadata(uint256,uint256[])\":{\"notice\":\"Stores packed metadata for a given token ID\"},\"storePackedMetadataSlot(uint256,uint256,uint256)\":{\"notice\":\"Stores packed metadata for a given token ID and slot\"}},\"notice\":\"Interface for contracts supporting Patchwork metadata standard\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/patchwork/src/interfaces/IPatchwork721.sol\":\"IPatchwork721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@patchwork/=lib/patchwork/src/\",\":ds-test/=lib/patchwork/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":lib/=lib/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":out /= 'out'/\",\":patchwork/=lib/patchwork/\",\":src /= 'src'/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/patchwork/src/interfaces/IERC5192.sol\":{\"keccak256\":\"0x4611a262674d44255c1bb250b27cb13ac0fa041fd09b276ed77f89ea5f8bd6f7\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://a6faac2fe51154c3525d678a728b87f764e57558fab09659d0a2cf44b5ca0ce3\",\"dweb:/ipfs/QmZNasRXARKoAjhyfMLJzZA7t8B2Gcp78gNjGnWGYzuS5M\"]},\"lib/patchwork/src/interfaces/IPatchwork721.sol\":{\"keccak256\":\"0xec433d9a6e760ee6bcbd1775f52fe673076370b6313b9a379da48b7cac25deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://479ad583c8b3e2e5033f931b730edae24cd7259ba882afaf1948f49d8ab756db\",\"dweb:/ipfs/QmNevJS7s67nhXuqzhnNqDk8XVAYAMB5AAScyxyvTkAySj\"]},\"lib/patchwork/src/interfaces/IPatchworkScoped.sol\":{\"keccak256\":\"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741\",\"dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"approved","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Frozen","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Locked","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"permissions","type":"uint256","indexed":false}],"type":"event","name":"PermissionChange","anonymous":false},{"inputs":[{"internalType":"address","name":"addr","type":"address","indexed":true}],"type":"event","name":"SchemaChange","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Thawed","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Unlocked","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"frozen","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getFreezeNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getScopeName","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"imageURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"loadPackedMetadata","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"slot","type":"uint256"}],"stateMutability":"view","type":"function","name":"loadPackedMetadataSlot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"locked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[],"stateMutability":"view","type":"function","name":"schema","outputs":[{"internalType":"struct IPatchworkMetadata.MetadataSchema","name":"","type":"tuple","components":[{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"struct IPatchworkMetadata.MetadataSchemaEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"permissionId","type":"uint256"},{"internalType":"enum IPatchworkMetadata.FieldType","name":"fieldType","type":"uint8"},{"internalType":"uint256","name":"fieldCount","type":"uint256"},{"internalType":"enum IPatchworkMetadata.FieldVisibility","name":"visibility","type":"uint8"},{"internalType":"uint256","name":"slot","type":"uint256"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"string","name":"key","type":"string"}]}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"schemaURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"frozen","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setFrozen"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"locked","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setLocked"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"permissions","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setPermissions"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256[]","name":"data","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"storePackedMetadata"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"slot","type":"uint256"},{"internalType":"uint256","name":"data","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"storePackedMetadataSlot"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"frozen(uint256)":{"params":{"tokenId":"ID of the token"},"returns":{"_0":"bool true if frozen, false if not"}},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"getFreezeNonce(uint256)":{"params":{"tokenId":"ID of the token"},"returns":{"nonce":"the nonce"}},"getScopeName()":{"returns":{"_0":"string the name of the scope"}},"imageURI(uint256)":{"params":{"tokenId":"ID of the token"},"returns":{"_0":"string the image URI"}},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"loadPackedMetadata(uint256)":{"params":{"tokenId":"ID of the token"},"returns":{"_0":"uint256[] the raw slot data as a uint256 array"}},"loadPackedMetadataSlot(uint256,uint256)":{"params":{"slot":"Slot to load metadata from","tokenId":"ID of the token"},"returns":{"_0":"uint256 the raw slot data as a uint256"}},"locked(uint256)":{"details":"SBTs assigned to zero address are considered invalid, and queries about them do throw.","params":{"tokenId":"The identifier for an SBT."}},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"schema()":{"returns":{"_0":"MetadataSchema the metadata schema"}},"schemaURI()":{"returns":{"_0":"string the URI of the schema"}},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"setFrozen(uint256,bool)":{"params":{"frozen":"Freeze status to set","tokenId":"ID of the token"}},"setLocked(uint256,bool)":{"params":{"locked":"Lock status to set","tokenId":"ID of the token"}},"setPermissions(address,uint256)":{"params":{"permissions":"Permissions value","to":"Address to set permissions for"}},"storePackedMetadata(uint256,uint256[])":{"params":{"data":"Metadata to store","tokenId":"ID of the token"}},"storePackedMetadataSlot(uint256,uint256,uint256)":{"params":{"data":"Metadata to store","slot":"Slot to store metadata","tokenId":"ID of the token"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{"frozen(uint256)":{"notice":"Gets the freeze status of a token (ERC-5192)"},"getFreezeNonce(uint256)":{"notice":"Returns the freeze nonce for a given token ID"},"getScopeName()":{"notice":"Get the scope this NFT claims to belong to"},"imageURI(uint256)":{"notice":"Returns the URI of the image associated with the given token ID"},"loadPackedMetadata(uint256)":{"notice":"Loads packed metadata for a given token ID"},"loadPackedMetadataSlot(uint256,uint256)":{"notice":"Loads packed metadata for a given token ID and slot"},"locked(uint256)":{"notice":"Returns the locking status of an Soulbound Token"},"schema()":{"notice":"Returns the metadata schema"},"schemaURI()":{"notice":"Returns the URI of the schema"},"setFrozen(uint256,bool)":{"notice":"Sets the freeze status of a token"},"setLocked(uint256,bool)":{"notice":"Sets the lock status of a token"},"setPermissions(address,uint256)":{"notice":"Sets permissions for a given address"},"storePackedMetadata(uint256,uint256[])":{"notice":"Stores packed metadata for a given token ID"},"storePackedMetadataSlot(uint256,uint256,uint256)":{"notice":"Stores packed metadata for a given token ID and slot"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@patchwork/=lib/patchwork/src/","ds-test/=lib/patchwork/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","lib/=lib/","openzeppelin-contracts/=lib/openzeppelin-contracts/","out /= 'out'/","patchwork/=lib/patchwork/","src /= 'src'/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/patchwork/src/interfaces/IPatchwork721.sol":"IPatchwork721"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4","urls":["bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7","dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"},"lib/patchwork/src/interfaces/IERC5192.sol":{"keccak256":"0x4611a262674d44255c1bb250b27cb13ac0fa041fd09b276ed77f89ea5f8bd6f7","urls":["bzz-raw://a6faac2fe51154c3525d678a728b87f764e57558fab09659d0a2cf44b5ca0ce3","dweb:/ipfs/QmZNasRXARKoAjhyfMLJzZA7t8B2Gcp78gNjGnWGYzuS5M"],"license":"CC0-1.0"},"lib/patchwork/src/interfaces/IPatchwork721.sol":{"keccak256":"0xec433d9a6e760ee6bcbd1775f52fe673076370b6313b9a379da48b7cac25deb6","urls":["bzz-raw://479ad583c8b3e2e5033f931b730edae24cd7259ba882afaf1948f49d8ab756db","dweb:/ipfs/QmNevJS7s67nhXuqzhnNqDk8XVAYAMB5AAScyxyvTkAySj"],"license":"MIT"},"lib/patchwork/src/interfaces/IPatchworkScoped.sol":{"keccak256":"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842","urls":["bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741","dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB"],"license":"MIT"}},"version":1},"id":16}